按照了ppt上给出的计算顺序，进行了icp算法的实现。
运行方式：运行icp.py即可。
第一步，matching
第二步，用四元数法求旋转矩阵，进行update。我沿用了第三次作业里面用到的东西。
第三步，收敛条件判断。我这里设置的是，如果两次的误差之间相差不大，即收敛了，就停止；否则迭代100次也停止。
我还使用了一个可视化工具，将点云可视化了出来，也可以看到两者相差不多。

使用的数据是icp_xy.mat。
自己生成数据验证的脚本在generate_my_point_cloud.py文件中，运行该脚本即可。
有可视化，以及会print出我设置的T和我解出来的T。
经过多次实验发现，差的并不多，说明icp这个方法还是很有效果的。